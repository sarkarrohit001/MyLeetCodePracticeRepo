class Solution {
    public int[] twoSum(int[] nums, int target) {
       /* int[] targets = new int[2];
      
        for(int i=0;i<nums.length-1;i++)
        {
            
            for(int j=i+1;j<nums.length;j++)
            {
                if(nums[j] == target - nums[i])
                {
            targets[0] = i;
                targets[1] = j;
                }
                
            
        }
        }
        return targets;*/
        
        
        
        //Optimizing//
        
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i=0;i<nums.length;i++)
            map.put(nums[i],i);
        for(int i=0;i<nums.length;i++)
        {
            int temp = target - nums[i];
            if(map.containsKey(temp) && map.get(temp) != i)
            {
                return new int[] {i, map.get(temp)};
            }
        }
        return null;
        
        
        
    }
}
